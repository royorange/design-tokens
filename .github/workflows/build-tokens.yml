name: Build and Publish Design Tokens

on:
  push:
    branches:
      - main
    paths:
      - 'tokens/figma/**'
      - 'scripts/**'
      - 'package.json'
  pull_request:
    paths:
      - 'tokens/figma/**'
      - 'scripts/**'
      - 'package.json'
  workflow_dispatch:
    inputs:
      force_release:
        description: '强制发布（即使 tokens 没有变化）'
        required: false
        type: boolean
        default: false
      version_type:
        description: '版本更新类型'
        required: false
        type: choice
        default: 'auto'
        options:
          - auto
          - patch
          - minor
          - major

permissions:
  contents: write
  packages: write

jobs:
  # 第一步：检查并更新版本
  version-check:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.VERSION }}
      should_release: ${{ steps.version.outputs.SHOULD_RELEASE }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Check and update version
        id: version
        run: |
          # 检查是否需要更新版本
          NEEDS_UPDATE=false
          
          # 如果是手动触发且选择了强制发布
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.force_release }}" == "true" ]]; then
            echo "ℹ️ 强制发布模式"
            NEEDS_UPDATE=true
          # 否则检查 tokens 是否有变化
          elif pnpm run version:check > /dev/null 2>&1; then
            echo "ℹ️ 检测到 tokens 变化"
            NEEDS_UPDATE=true
          fi
          
          if [[ "$NEEDS_UPDATE" == "true" ]]; then
            echo "SHOULD_RELEASE=true" >> $GITHUB_OUTPUT
            
            # 判断是否需要更新版本号
            UPDATE_VERSION=true
            
            # 如果是强制发布且 tokens 没有变化
            if [[ "${{ github.event.inputs.force_release }}" == "true" ]] && ! pnpm run version:check > /dev/null 2>&1; then
              echo "ℹ️ 强制发布模式，使用当前版本"
              UPDATE_VERSION=false
            fi
            
            if [[ "$UPDATE_VERSION" == "true" ]]; then
              # 确定版本更新类型
              VERSION_TYPE="${{ github.event.inputs.version_type }}"
              if [[ -z "$VERSION_TYPE" || "$VERSION_TYPE" == "auto" ]]; then
                pnpm run version:auto
              else
                pnpm run version:$VERSION_TYPE
              fi
              
              # 提交版本更新
              git config --local user.email "action@github.com"
              git config --local user.name "GitHub Action"
              git add -A
              git commit -m "chore: bump version to v$(node -p "require('./package.json').version") [skip ci]"
              git push
            fi
            
            # 获取版本号（无论是否更新）
            VERSION=$(node -p "require('./package.json').version")
            echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          else
            echo "SHOULD_RELEASE=false" >> $GITHUB_OUTPUT
            echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
          fi

  # 第二步：构建
  build:
    needs: version-check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main  # 确保获取最新的版本更新
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Transform tokens
        run: pnpm run build:transform
      
      - name: Build Flutter package
        run: pnpm run build:flutter
      
      - name: Build Tailwind package
        run: pnpm run build:tailwind
      
      - name: Build CSS package
        run: pnpm run build:css
      
      - name: Run tests
        run: npm test || true
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: built-packages
          path: |
            packages/flutter/
            packages/tailwind/
            packages/css/
            tokens/transformed/
      
      # 提交 Flutter 包的生成文件
      - name: Commit Flutter package files
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add packages/flutter/lib/
          git diff --staged --quiet || git commit -m "chore: update Flutter design tokens [skip ci]"
          git push

  # 第三步：发布 NPM
  publish-npm:
    needs: [version-check, build]
    runs-on: ubuntu-latest
    if: needs.version-check.outputs.should_release == 'true' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: built-packages
          path: .
      
      - name: Publish Tailwind package
        run: |
          cd packages/tailwind
          pnpm publish --access public --no-git-checks || true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Publish CSS package
        run: |
          cd packages/css
          pnpm publish --access public --no-git-checks || true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # 第四步：发布 Flutter
  publish-flutter:
    needs: [version-check, build]
    runs-on: ubuntu-latest
    if: needs.version-check.outputs.should_release == 'true' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
      
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: built-packages
          path: .
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
      
      - name: Setup pub credentials
        run: |
          mkdir -p ~/.config/dart
          echo '${{ secrets.PUB_CREDENTIALS }}' > ~/.config/dart/pub-credentials.json
      
      - name: Publish to pub.dev
        run: |
          cd packages/flutter
          flutter pub publish --force || true

  # 第五步：创建 Release
  create-release:
    needs: [version-check, build, publish-npm, publish-flutter]
    runs-on: ubuntu-latest
    if: needs.version-check.outputs.should_release == 'true' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.version-check.outputs.version }}
          name: Release v${{ needs.version-check.outputs.version }}
          body: |
            ## Design Tokens Update
            
            This release includes updated design tokens from Figma.
            
            ### Packages
            - Flutter: `wisburg_design_tokens` v${{ needs.version-check.outputs.version }}
            - Tailwind: `@wisburg/design-tokens-tailwind` v${{ needs.version-check.outputs.version }}
            - CSS/Web: `@wisburg/design-tokens-css` v${{ needs.version-check.outputs.version }}
            
            ### Changes
            See commit history for detailed changes.
          draft: false
          prerelease: false
      
      - name: Output version info
        run: |
          echo "::notice title=新版本发布::Design Tokens 已更新到 v${{ needs.version-check.outputs.version }}"
          echo "Flutter 项目请更新 pubspec.yaml："
          echo "  wisburg_design_tokens: ^${{ needs.version-check.outputs.version }}"
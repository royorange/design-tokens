// Generated by Design Tokens - DO NOT EDIT
// Last updated: 2025-07-18T08:18:56.618Z

import 'package:flutter/material.dart';

/// 颜色常量定义
class AppColors {

  // Primary Colors
  static const Color primary50 = Color(0xFFEAEAFD);
  static const Color primary100 = Color(0xFFCBC9F8);
  static const Color primary200 = Color(0xFFA7A7F4);
  static const Color primary300 = Color(0xFF8283F0);
  static const Color primary400 = Color(0xFF6765EC);
  static const Color primary500 = Color(0xFF4F46E5);
  static const Color primary600 = Color(0xFF493DD9);
  static const Color primary700 = Color(0xFF4031CD);
  static const Color primary800 = Color(0xFF3923C1);
  static const Color primary900 = Color(0xFF2B00B0);

  // Neutral Colors
  static const Color neutral50 = Color(0xFFE9EBEE);
  static const Color neutral100 = Color(0xFFD3D4D8);
  static const Color neutral200 = Color(0xFFB6B8C0);
  static const Color neutral300 = Color(0xFF999BA8);
  static const Color neutral400 = Color(0xFF838696);
  static const Color neutral500 = Color(0xFF6E7285);
  static const Color neutral600 = Color(0xFF606374);
  static const Color neutral700 = Color(0xFF454650);
  static const Color neutral800 = Color(0xFF202029);
  static const Color neutral900 = Color(0xFF121212);
  static const Color white = Color(0xFFFFFFFF);
  static const Color black = Color(0xFF000000);
}

/// 间距常量定义
class AppSpacing {
  static const double spacing0 = 0.0;
  static const double spacing1 = 4.0;
  static const double spacing2 = 8.0;
  static const double spacing3 = 12.0;
  static const double spacing4 = 16.0;
  static const double spacing5 = 20.0;
  static const double spacing6 = 24.0;
  static const double spacing8 = 32.0;
  static const double spacing10 = 40.0;
  static const double spacing12 = 48.0;
  static const double spacing16 = 64.0;
}

/// 圆角常量定义
class AppRadius {
  static const double none = 0.0;
  static const double sm = 4.0;
  static const double md = 8.0;
  static const double lg = 12.0;
  static const double xl = 16.0;
  static const double full = 9999.0;
}

/// 字体大小常量定义
class AppFontSizes {
  static const double xs = 12.0;
  static const double sm = 14.0;
  static const double base = 16.0;
  static const double lg = 18.0;
  static const double xl = 20.0;
  static const double size2xl = 24.0;
  static const double size3xl = 30.0;
  static const double size4xl = 36.0;
}

/// Material 3 ColorScheme definitions
class AppColorSchemes {
  static const ColorScheme lightColorScheme = ColorScheme(
    brightness: Brightness.light,
    primary: AppColors.primary500,
    onPrimary: AppColors.white,
    primaryContainer: AppColors.primary100,
    onPrimaryContainer: AppColors.primary900,
    secondary: AppColors.primary400,
    onSecondary: AppColors.white,
    secondaryContainer: AppColors.primary100,
    onSecondaryContainer: AppColors.primary900,
    error: const Color(0xFFDC2626),
    onError: AppColors.white,
    errorContainer: const Color(0xFFFFEBEE),
    onErrorContainer: const Color(0xFF7F1D1D),
    surface: AppColors.white,
    onSurface: AppColors.neutral900,
    surfaceContainerHighest: AppColors.neutral100,
    onSurfaceVariant: AppColors.neutral700,
    outline: AppColors.neutral400,
    outlineVariant: AppColors.neutral300,
    shadow: AppColors.black,
    scrim: AppColors.black,
    inverseSurface: AppColors.neutral900,
    onInverseSurface: AppColors.white,
    inversePrimary: AppColors.primary300,
  );

  static const ColorScheme darkColorScheme = ColorScheme(
    brightness: Brightness.dark,
    primary: AppColors.primary400,
    onPrimary: AppColors.primary900,
    primaryContainer: AppColors.primary700,
    onPrimaryContainer: AppColors.primary100,
    secondary: AppColors.primary300,
    onSecondary: AppColors.primary900,
    secondaryContainer: AppColors.primary700,
    onSecondaryContainer: AppColors.primary100,
    error: const Color(0xFFEF4444),
    onError: AppColors.white,
    errorContainer: const Color(0xFF991B1B),
    onErrorContainer: const Color(0xFFFECACA),
    surface: AppColors.neutral900,
    onSurface: AppColors.neutral100,
    surfaceContainerHighest: AppColors.neutral800,
    onSurfaceVariant: AppColors.neutral300,
    outline: AppColors.neutral600,
    outlineVariant: AppColors.neutral700,
    shadow: AppColors.black,
    scrim: AppColors.black,
    inverseSurface: AppColors.neutral100,
    onInverseSurface: AppColors.neutral900,
    inversePrimary: AppColors.primary600,
  );
}

/// Design Tokens 直接访问
class DesignTokens {
  static const colors = _ColorTokens();
  static const spacing = _SpacingTokens();
  static const radius = _RadiusTokens();

  // Generated themes
  static ThemeData lightTheme = _generateLightTheme();
  static ThemeData darkTheme = _generateDarkTheme();
}

class _ColorTokens {
  const _ColorTokens();

  // Primary colors
  Color get primary => AppColors.primary500;
  Color get primaryLight => AppColors.primary400;
  Color get primaryDark => AppColors.primary600;
}

class _SpacingTokens {
  const _SpacingTokens();

  double get s0 => 0.0;
  double get s1 => 4.0;
  double get s2 => 8.0;
  double get s3 => 12.0;
  double get s4 => 16.0;
  double get s5 => 20.0;
  double get s6 => 24.0;
  double get s8 => 32.0;
  double get s10 => 40.0;
  double get s12 => 48.0;
  double get s16 => 64.0;

  // Semantic spacing
  double get xs => AppSpacing.spacing1;
  double get sm => AppSpacing.spacing2;
  double get md => AppSpacing.spacing4;
  double get lg => AppSpacing.spacing6;
  double get xl => AppSpacing.spacing8;
}

class _RadiusTokens {
  const _RadiusTokens();

  double get none => 0.0;
  double get sm => 4.0;
  double get md => 8.0;
  double get lg => 12.0;
  double get xl => 16.0;
  double get full => 9999.0;
}

// Theme definitions
ThemeData _generateLightTheme() {
  return ThemeData(
    useMaterial3: true,
    brightness: Brightness.light,
    colorScheme: AppColorSchemes.lightColorScheme,
    scaffoldBackgroundColor: AppColors.neutral50,
    appBarTheme: const AppBarTheme(
      centerTitle: true,
      elevation: 0,
      backgroundColor: AppColors.white,
      foregroundColor: AppColors.neutral900,
    ),
    elevatedButtonTheme: ElevatedButtonThemeData(
      style: ElevatedButton.styleFrom(
        foregroundColor: AppColors.white,
        backgroundColor: AppColors.primary500,
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(AppRadius.md),
        ),
        padding: const EdgeInsets.symmetric(
          horizontal: AppSpacing.spacing4,
          vertical: AppSpacing.spacing3,
        ),
      ),
    ),
  );
}

ThemeData _generateDarkTheme() {
  return ThemeData(
    useMaterial3: true,
    brightness: Brightness.dark,
    colorScheme: AppColorSchemes.darkColorScheme,
    scaffoldBackgroundColor: AppColors.neutral900,
    appBarTheme: const AppBarTheme(
      centerTitle: true,
      elevation: 0,
      backgroundColor: AppColors.neutral900,
      foregroundColor: AppColors.white,
    ),
    elevatedButtonTheme: ElevatedButtonThemeData(
      style: ElevatedButton.styleFrom(
        foregroundColor: AppColors.white,
        backgroundColor: AppColors.primary500,
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(AppRadius.md),
        ),
        padding: const EdgeInsets.symmetric(
          horizontal: AppSpacing.spacing4,
          vertical: AppSpacing.spacing3,
        ),
      ),
    ),
  );
}
